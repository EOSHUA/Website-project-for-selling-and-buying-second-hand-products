{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Coods\\\\finished_project_of_the_second-hand_products_site\\\\client\\\\src\\\\content\\\\Content.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext } from \"react\";\nimport Categories from \"../categories/Categories\";\nimport ItemInfo from \"../itemInfo/ItemInfo\";\nimport Items from \"../items/Items\";\nimport './content.css';\n\n// Create a context with initial values and a setter function placeholder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemsContext = /*#__PURE__*/createContext({\n  Itemss: [],\n  // Assuming you want to start with an empty array\n  setItems: () => {} // Function to update the state\n});\nexport default function Content() {\n  _s();\n  // Initialize state with an empty array, not an empty object\n  const [Itemss, setItems] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(ItemsContext.Provider, {\n      value: {\n        Itemss,\n        setItems\n      },\n      children: [/*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Items, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Content, \"q5p6+ndxw9SpjpqfIVWZ1ee10bM=\");\n_c = Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","createContext","Categories","ItemInfo","Items","jsxDEV","_jsxDEV","ItemsContext","Itemss","setItems","Content","_s","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/My Coods/finished_project_of_the_second-hand_products_site/client/src/content/Content.jsx"],"sourcesContent":["import React, { useState, createContext } from \"react\";\r\nimport Categories from \"../categories/Categories\";\r\nimport ItemInfo from \"../itemInfo/ItemInfo\";\r\nimport Items from \"../items/Items\";\r\nimport './content.css';\r\n\r\n// Create a context with initial values and a setter function placeholder\r\nexport const ItemsContext = createContext({\r\n  Itemss: [], // Assuming you want to start with an empty array\r\n  setItems: () => {}, // Function to update the state\r\n});\r\n\r\nexport default function Content() {\r\n  // Initialize state with an empty array, not an empty object\r\n  const [Itemss, setItems] = useState([]);\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {/* Provide the actual state and setter function to the context */}\r\n      <ItemsContext.Provider value={{ Itemss, setItems }}>\r\n        <Categories />\r\n        <Items />\r\n        <ItemInfo />\r\n      </ItemsContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AACtD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAO,eAAe;;AAEtB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC;EACxCO,MAAM,EAAE,EAAE;EAAE;EACZC,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC,CAAE;AACtB,CAAC,CAAC;AAEF,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC;EACA,MAAM,CAACH,MAAM,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEvC,oBACEM,OAAA;IAAKM,SAAS,EAAC,SAAS;IAAAC,QAAA,eAEtBP,OAAA,CAACC,YAAY,CAACO,QAAQ;MAACC,KAAK,EAAE;QAAEP,MAAM;QAAEC;MAAS,CAAE;MAAAI,QAAA,gBACjDP,OAAA,CAACJ,UAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdb,OAAA,CAACF,KAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTb,OAAA,CAACH,QAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAACR,EAAA,CAduBD,OAAO;AAAAU,EAAA,GAAPV,OAAO;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}